[base]
; title for this game
game_title = "Der Bioladenmanager 2"

; a random secret which is used to initialize the random number generators
; for the deterministic interest and item selling rates
; please generate a random value, e.g. at
; https://www.random.org/strings/?num=5&len=20&digits=on&upperalpha=on&loweralpha=on&unique=on&format=html&rnd=new
random_secret = "!!replace this!!"

; a random secret which is used to initialize the random number generators
; please generate a random value like you did for "random_secret"
upgrade_secret = "!!replace this!!"

; base url for this game (needed for absolute urls like in mails)
base_url = "https://blm2.example.com"

; operator name
admin_name = "Insert Name Here"

; operator email address
admin_email = "contact-address@example.com"

; address line 1 (for impressum)
; e.g. Street Name, may be empty
admin_addr_line_1 = ""

; address line 2 (for impressum)
; e.g. Zip-Code and Country, may be empty
admin_addr_line_2 = ""

; timezone for game
timezone = "Europe/Berlin"

; is the maintenance mode active
maintenance_active = no

; message to display when maintenance mode is on
maintenance_message = "Das Spiel befindet sich gerade im Wartungsmodus (Einspielen von Updates und Bugfixes). Bitte versuchen Sie es in ein paar Minuten erneut."

; is the registration closed?
registration_closed = false

; length of a game round (in seconds; default is 3 months)
game_round_duration = 7776000

; pause after a game round (in seconds, default is 7 days)
game_pause_duration = 604800

; minimum length of usernames
username_min_len = 2

; maximum length of usernames
; should match "mitglieder.Name" column
username_max_len = 20

; maximum length of email addresses
; should match "mitglieder.EMail" column
email_max_len = 96

; minimum required length of passwords
password_min_len = 6

; options for the password hashing algorithm
password_hash_options[memory_cost] = 16384
password_hash_options[time_cost] = 8
password_hash_options[threads] = 2

; session timeout (in seconds)
session_timeout = 3600

; base income for all players
income_base = 30

; number of entries to show in ranking table
ranking_page_size = 15

; number of entries to show in group ranking table
group_page_size = 10

; number of entries to show in admin log table
admin_log_page_size = 25

; number of entries to show in the market table
market_page_size = 20

; number of entries to show in the message table
messages_page_size = 20

; interval of cronjob (in minutes)
cron_interval = 30

; interval when points will be re-calculated (in hours)
; has to be greater than 'cron_interval' and must be a multiple of cron_interval.
points_interval = 6

; redirect all mails sent to the users to the administrator?
; can be used to debug / test various stuff without flooding the users with spam mails
redirect_all_mails_to_admin = false

; when canceling a build or research, then this amount of money is refunded (1 = 100%, 0.5 = 50%, 0 = 0%)
cancel_refund = 0.75;

; maximum size for a profile picture (in bytes, default 256k)
max_profile_image_size = 262144

; should NEVER be overridden unless the system tests are running!
testing = false

; factor for the expensens => points conversion
; default is 100 â‚¬ = 1 point
expense_points_factor = 100

[database]
; hostname to connect to
hostname = "localhost"
; database name to connect to
database = "blm2"
; username for connection
username = "blm2"
; password for connection
password = "blm2"
; threshold (in ms) when to log slow sql queries
slow_query_threshold = 10

[captcha]
; width of generated image
width = 200
; height of generated image
height = 60
; length of the challenge
length = 6
; allowed characters for challenge
chars = "0123456789"
; font to use for the characters
font = "include/SportsballRegular-RxlM.ttf"
; size of font
fontsize = 18
; background noise level, increases security
security = 5000
; size of background noise
rect_size = 6
; is challenge case sensitive?
case_sensitive = false
; how long a challenge is valid
validity_minutes = 5

[plantage]
; building data for plantage
base_cost = 260
base_duration = 1780
factor_cost = 1.35
factor_duration = 1.20
; base production amount of all items
production_base_amount = 350
; base production cost for all items
production_base_cost = 200
; bonus to production amount for each plantage level
production_amount_per_level = 10
; bonus to production amount for later items
production_amount_per_item_id = 20
; maximum duration of a single production (in hours)
production_hours_max = 12
; base income per item and level each cronjob interval (x kg per research level and cronjob run)
production_cron_base = 4


[research_lab]
; building data for research lab
base_cost = 320
base_duration = 1900
factor_cost = 1.37
factor_duration = 1.23
; each level of research lab reduces research duration (1 = 100%, 0.5 = 50%, 0 = 0%)
bonus_factor = 0.055
; bonus to production amount for each research level
production_amount_per_level = 8
; malus to production cost for each research level
production_cost_per_level = 4
; base data for researches
research_base_cost = 230
research_base_duration = 2400
research_factor_cost = 1.29
research_factor_duration = 1.19
; minimum duration of all researches (in seconds)
research_min_duration = 7200
; extra cost for later items
cost_item_id_factor = 100

[shop]
; building data for shop
base_cost = 260
base_duration = 1800
factor_cost = 1.35
factor_duration = 1.22
; minimum rate for selling prices (1 = 100%, 0.5 = 50%, 0 = 0%)
sell_rate_min = 0.7
; maximum rate for selling prices (1 = 100%, 0.5 = 50%, 0 = 0%)
sell_rate_max = 1.0
; base price for each item
item_price_base = 1.35
; bonus to sell price for each research level
item_price_research_bonus = 0.15
; bonus to sell price for each shop level
item_price_shop_bonus = 0.08
; bonus to sell price for each school level
item_price_school_bonus = 0.12
; bonus to sell price for later items
item_price_item_id_factor = 0.40
; income bonus per shop level
income_bonus = 12

[kebab_stand]
; building data for kebab stand
base_cost = 310
base_duration = 2150
factor_cost = 1.38
factor_duration = 1.22
; income bonus per doenerstand level
income_bonus = 20

[building_yard]
; building data for building yard
base_cost = 620
base_duration = 2250
factor_cost = 1.40
factor_duration = 1.24
; each level of building yard reduces building duration (1 = 100%, 0.5 = 50%, 0 = 0%)
bonus_factor = 0.061

[school]
; building data for school
base_cost = 300
base_duration = 2050
factor_cost = 1.39
factor_duration = 1.24

[fence]
; building data for fence
base_cost = 650
base_duration = 2800
factor_cost = 1.45
factor_duration = 1.28
; bonus factor (for chances) for mafia actions
; each building level increments the success chances by these percentages (1 = 100%, 0.5 = 50%, 0 = 0%)
mafia_bonus = 0.025

[pizzeria]
; building data for pizza
base_cost = 650
base_duration = 2800
factor_cost = 1.45
factor_duration = 1.28
; bonus factor (for chances) for mafia actions
; each building level increments the success chances by these percentages (1 = 100%, 0.5 = 50%, 0 = 0%)
mafia_bonus = 0.025

[bank]
; building data for bank
base_cost = 200000
base_duration = 86400
factor_cost = 1.85
factor_duration = 1.75
; each level of this building increases the deposit amount by that value
bonus_factor_upgrade = 1.75
; minimum interest rate (1 = 100%, 0.5 = 50%, 0 = 0%)
interest_debit_rate_min = 0.011
; maximum interest rate (1 = 100%, 0.5 = 50%, 0 = 0%)
interest_debit_rate_max = 0.015
; minimum credit rate (1 = 100%, 0.5 = 50%, 0 = 0%)
interest_credit_rate_min = 0.017
; maximum credit rate (1 = 100%, 0.5 = 50%, 0 = 0%)
interest_credit_rate_max = 0.023
; base amount a user may deposit on the bank account
; each level of the building doubles this amount
deposit_limit = 100000
; maximum amount a user may overdraw a bank account
credit_limit = -15000

[market]
; when retracting an offer from the market, return that amount of the item (1 = 100%, 0.5 = 50%, 0 = 0%)
retract_rate = 0.90
; when successfully selling an item on the market, the market keeps a provision (1 = 100%, 0.5 = 50%, 0 = 0%)
provision_rate = 0.02
; minimum and maximum sell price of an item in percent of the current shop price (1 = 100%, 0.5 = 50%, 0 = 0%)
min_price = 0.75
max_price = 2

[contract]
; minimum and maximum sell price of an item in percent of the current shop price (1 = 100%, 0.5 = 50%, 0 = 0%)
min_price = 0.5
max_price = 2

[mafia]
; minimum number of points required to use mafia
min_points = 4000
; blocking times for the mafia actions when attacking an war opponent
wait_factor_war = 0.5
; point range for mafia actions (own points / enemy points must be within this range)
points_factor = 1.5

[group]
; how long group diplomacy relations have to be active before they can be canceled (days)
diplomacy_min_duration = 7
; maximum count of members per group
max_members = 15
; maximum length of group name
; should match "gruppe.Name" column
max_name_length = 32
; maximum length of group tag
; should match "gruppe.Kuerzel" column
max_tag_length = 6
; minimum plantage level required to join a group
plantage_level_join_group = 5
; minimum plantage level required to create a group
plantage_level_create_group = 8
; when surrendering a war, each member will lose this amount of points (1 = 100%, 0.5 = 50%, 0 = 0%)
war_loose_points = 0.10
; when surrendering a war, each member will lose that many levels of plantage
war_loose_plantage = 3
; minimum amount of money to fight a war for
war_min_amount = 100000

[mafia_espionage]
costs[0] = 200
costs[1] = 400
costs[2] = 600
costs[3] = 800
chance[0] = 0.2
chance[1] = 0.3
chance[2] = 0.4
chance[3] = 0.5
wait_time = 300

[mafia_robbery]
costs[0] = 300
costs[1] = 600
costs[2] = 900
costs[3] = 1200
chance[0] = 0.2
chance[1] = 0.3
chance[2] = 0.4
chance[3] = 0.5
wait_time = 900
; minimum percentage of money stolen from opponent
min_rate = 0.4
; maximum percentage of money stolen from opponent
max_rate = 0.75

[mafia_heist]
costs[0] = 500
costs[1] = 1000
costs[2] = 1500
costs[3] = 2000
chance[0] = 0.2
chance[1] = 0.3
chance[2] = 0.4
chance[3] = 0.5
wait_time = 1800
; minimum percentage of wares stolen from opponent
min_rate = 0.4
; maximum percentage of wares stolen from opponent
max_rate = 0.75

[mafia_attack]
costs[0] = 10000
costs[1] = 25000
costs[2] = 40000
costs[3] = 65000
chance[0] = 0.05
chance[1] = 0.1
chance[2] = 0.15
chance[3] = 0.2
wait_time = 14400

[starting_values]
Geld = 5000
Bank = 0
Punkte = 0
IgmGesendet = 0
IgmEmpfangen = 0
NextMafia = null
OnlineZeit = 0
OnlineZeitSinceLastCron = 0
Gruppe = null
GruppeLastMessageZeit = null
LastLogin = null
; Plantage
Gebaeude1 = 1
; Forschungszentrum
Gebaeude2 = 0
; Bioladen
Gebaeude3 = 0
; DÃ¶nerstand
Gebaeude4 = 0
; Bauhof
Gebaeude5 = 0
; VerkÃ¤uferschule
Gebaeude6 = 0
; Zaun
Gebaeude7 = 0
; Pizzeria
Gebaeude8 = 0
; Bankschliessfach
Gebaeude9 = 0
; Kartoffeln
Forschung1 = 1
; Karotten
Forschung2 = 0
; Tomaten
Forschung3 = 0
; Salat
Forschung4 = 0
; Ã„pfel
Forschung5 = 0
; Birnen
Forschung6 = 0
; Kirschen
Forschung7 = 0
; Bananen
Forschung8 = 0
; Gurken
Forschung9 = 0
; Weintrauben
Forschung10 = 0
; Tabak
Forschung11 = 0
; Ananas
Forschung12 = 0
; Erdbeeren
Forschung13 = 0
; Orangen
Forschung14 = 0
; Kiwi
Forschung15 = 0
; Kartoffeln
Lager1 = 100
; Karotten
Lager2 = 0
; Tomaten
Lager3 = 0
; Salat
Lager4 = 0
; Ã„pfel
Lager5 = 0
; Birnen
Lager6 = 0
; Kirschen
Lager7 = 0
; Bananen
Lager8 = 0
; Gurken
Lager9 = 0
; Weintrauben
Lager10 = 0
; Tabak
Lager11 = 0
; Ananas
Lager12 = 0
; Erdbeeren
Lager13 = 0
; Orangen
Lager14 = 0
; Kiwi
Lager15 = 0
